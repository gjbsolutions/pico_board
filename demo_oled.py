from machine import Pin, ADC
from time import sleep
    
import machine
#from machine import Pin, SoftI2C
import ssd1306
import framebuf
from time import sleep

i2c = machine.SoftI2C(scl=machine.Pin(17), sda=machine.Pin(16))

#pin = machine.Pin(16, machine.Pin.OUT)
#pin.value(0) #set GPIO16 low to reset OLED
#pin.value(1) #while OLED is running, must set GPIO16 in high
potentiometer = machine.ADC(28)

# Define the GPIO pin for the button
leftbutton_pin = machine.Pin(20, machine.Pin.IN, machine.Pin.PULL_UP)
rightbutton_pin = machine.Pin(21, machine.Pin.IN, machine.Pin.PULL_UP)

# 32x32 apple icon pixel array
a = [
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0xE0, 0xFC, 0x00,
0x00, 0xF8, 0xF8, 0x00, 0x00, 0xFC, 0xF0, 0x00, 0x00, 0xFD, 0xE0, 0x00, 0x00, 0xFF, 0xC0, 0x00,
0x00, 0x7F, 0xC0, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x0F, 0x82, 0x00, 0x07, 0xFB, 0x9F, 0xE0,
0x1F, 0xFF, 0xFF, 0xF8, 0x3F, 0xFF, 0xFF, 0xFC, 0x3F, 0xFF, 0xFF, 0xFC, 0x7F, 0xFF, 0xFF, 0xFE,
0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFE,
0x7F, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF, 0xFF, 0xFC, 0x3F, 0xFF, 0xFF, 0xFC, 0x3F, 0xFF, 0xFF, 0xFC,
0x1F, 0xFF, 0xFF, 0xF8, 0x1F, 0xFF, 0xFF, 0xF8, 0x0F, 0xFF, 0xFF, 0xF0, 0x07, 0xFF, 0xFF, 0xE0,
0x03, 0xFF, 0xFF, 0xE0, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x7E, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00
]
apple = bytearray(a)

# 50x32 greek flag pixel array
b = [
0x81, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0xf0, 
0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0xf0, 0x3f, 0xff, 
0xff, 0xff, 0xc0, 0x80, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xc0, 0x81, 0xf0, 0x3f, 0xff, 0xff, 0xff, 
0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x40, 0xff, 
0xff, 0xe0, 0x00, 0x00, 0x00, 0x40, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x40, 0x81, 0xf0, 0x3f, 
0xff, 0xff, 0xff, 0xc0, 0x80, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xc0, 0x80, 0xf0, 0x3f, 0xff, 0xff, 
0xff, 0xc0, 0x80, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xc0, 0x80, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x40, 
0x80, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x81, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x40, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40
]
flag = bytearray(b)

oled_width = 128
oled_height = 32
oled = ssd1306.SSD1306_I2C(oled_width, oled_height, i2c)

oled.fill(0)
oled.text('Hello World!!!', 0, 0)

oled.show()
sleep(2)

# battery voltage
sensor_value = 2 * 3.3 * potentiometer.read_u16() / 65536
rounded_value = round(sensor_value, 2)
oled.fill(0)
oled.text('Voltage: ' + str(rounded_value) + 'V' , 0, 0)

oled.show()
sleep(5)

# apple icon with, text in two lines
oled.fill(0)
fb = framebuf.FrameBuffer(apple, 32, 32, framebuf.MONO_HLSB)
oled.blit(fb, 0, 0)
oled.text("1KG: 4.00$",35,8)
oled.text("5KG: 18.00$",35,22)
oled.show()
sleep(5)

# flag icon with, text in two lines
oled.fill(0)
fb = framebuf.FrameBuffer(flag, 50, 32, framebuf.MONO_HLSB)
oled.blit(fb, 0, 0)
oled.text("HELLAS",55,8)
oled.show()
sleep(5)

counter = 0
while(1):
    oled.fill(0)
    counter = counter + 1
    oled.text('Timer: ' + str(counter), 0, 0)
    oled.show()
    sleep(1)
    if not leftbutton_pin.value():
        sensor_value = 2 * 3.3 * potentiometer.read_u16() / 65536
        rounded_value = round(sensor_value, 2)
        oled.fill(0)
        oled.text('Voltage: ' + str(rounded_value) + 'V' , 0, 0)
        oled.show()
        sleep(5)
    if not rightbutton_pin.value():
        # flag icon with, text in two lines
        oled.fill(0)
        fb = framebuf.FrameBuffer(flag, 50, 32, framebuf.MONO_HLSB)
        oled.blit(fb, 0, 0)
        oled.text("HELLAS",55,8)
        oled.show()
        sleep(5)
    
    